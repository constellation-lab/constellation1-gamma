{
    "contract_name": "cnste_token",
    "contract_version": "0.1.0",
    "idl_version": "1.0.0",
    "instantiate": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InstantiateMsg",
      "type": "object",
      "required": [
        "constella_option_contract",
        "incentive_manager_contract"
      ],
      "properties": {
        "constella_option_contract": {
          "type": "string"
        },
        "incentive_manager_contract": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "execute": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ExecuteMsg",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "transfer"
          ],
          "properties": {
            "transfer": {
              "type": "object",
              "required": [
                "recipient",
                "amount"
              ],
              "properties": {
                "recipient": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "burn"
          ],
          "properties": {
            "burn": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "mint"
          ],
          "properties": {
            "mint": {
              "type": "object",
              "required": [
                "recipient",
                "amount"
              ],
              "properties": {
                "recipient": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "send"
          ],
          "properties": {
            "send": {
              "type": "object",
              "required": [
                "contract",
                "amount",
                "msg"
              ],
              "properties": {
                "contract": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "msg": {
                  "$ref": "#/definitions/Binary"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "increase_allowance"
          ],
          "properties": {
            "increase_allowance": {
              "type": "object",
              "required": [
                "spender",
                "amount"
              ],
              "properties": {
                "spender": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "decrease_allowance"
          ],
          "properties": {
            "decrease_allowance": {
              "type": "object",
              "required": [
                "spender",
                "amount"
              ],
              "properties": {
                "spender": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "transfer_from"
          ],
          "properties": {
            "transfer_from": {
              "type": "object",
              "required": [
                "owner",
                "recipient",
                "amount"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                },
                "recipient": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "burn_from"
          ],
          "properties": {
            "burn_from": {
              "type": "object",
              "required": [
                "owner",
                "amount"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "send_from"
          ],
          "properties": {
            "send_from": {
              "type": "object",
              "required": [
                "owner",
                "contract",
                "amount",
                "msg"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                },
                "contract": {
                  "type": "string"
                },
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "msg": {
                  "$ref": "#/definitions/Binary"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "stake"
          ],
          "properties": {
            "stake": {
              "type": "object",
              "required": [
                "amount"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ],
      "definitions": {
        "Binary": {
          "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
          "type": "string"
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "query": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryMsg",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "balance"
          ],
          "properties": {
            "balance": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "token_info"
          ],
          "properties": {
            "token_info": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "allowance"
          ],
          "properties": {
            "allowance": {
              "type": "object",
              "required": [
                "owner",
                "spender"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                },
                "spender": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "all_allowances"
          ],
          "properties": {
            "all_allowances": {
              "type": "object",
              "required": [
                "owner"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                },
                "start_after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "limit": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "all_accounts"
          ],
          "properties": {
            "all_accounts": {
              "type": "object",
              "properties": {
                "start_after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "limit": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "minter"
          ],
          "properties": {
            "minter": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "marketing_info"
          ],
          "properties": {
            "marketing_info": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "download_logo"
          ],
          "properties": {
            "download_logo": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "stake_info"
          ],
          "properties": {
            "stake_info": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "migrate": null,
    "sudo": null,
    "responses": {
      "stake_info": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StakeInfo",
        "type": "object",
        "required": [
          "staked_amount"
        ],
        "properties": {
          "staked_amount": {
            "$ref": "#/definitions/Uint128"
          }
        },
        "additionalProperties": false,
        "definitions": {
          "Uint128": {
            "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
            "type": "string"
          }
        }
      }
    }
  }